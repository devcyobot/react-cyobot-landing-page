name: Deploy Staging
on:
  workflow_dispatch:
    inputs:
      commit_sha:
        description: "Commit SHA to deploy (leave blank for latest commit)."
        type: string
      dockerhub_username:
        description: "Docker Hub username for repository"
        required: true
        default: "devcyobot"
        type: string
      dockerhub_repo:
        description: "Docker Hub repository to deploy from"
        required: true
        default: "website"
        type: string
jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Resolve commit sha
        run: |
          if [ -z "${{ github.event.inputs.commit_sha }}" ]; then
            echo "COMMIT_SHA=${{ github.sha }}" >> $GITHUB_ENV
            echo "Using latest commit SHA: ${{ github.sha }}"
          else
            echo "COMMIT_SHA=${{ github.event.inputs.commit_sha }}" >> $GITHUB_ENV
            echo "Using provided commit SHA: ${{ github.event.inputs.commit_sha }}"
          fi
      - name: Resolve docker image tag
        run: |
          DOCKERHUB_USERNAME=${{ github.event.inputs.dockerhub_username || inputs.dockerhub_username }}
          echo "DOCKERHUB_USERNAME=${DOCKERHUB_USERNAME}" >> $GITHUB_ENV

          # resolve the dockerhub repo
          DOCKERHUB_REPO=${{ github.event.inputs.dockerhub_repo || inputs.dockerhub_repo }}
          echo "DOCKERHUB_REPO=${DOCKERHUB_REPO}" >> $GITHUB_ENV

          # resolve the image tag
          IMAGE_TAG="${DOCKERHUB_USERNAME}/${DOCKERHUB_REPO}:${{ env.COMMIT_SHA }}"
          echo "IMAGE_TAG=${IMAGE_TAG}" >> $GITHUB_ENV
      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ env.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Check if image with tag exists on Docker Hub
        run: |
          if docker manifest inspect "${{ env.IMAGE_TAG }}" > /dev/null 2>&1; then
            echo "Image exists on Docker Hub. Skipping build."
            echo "BUILD_NEEDED=false" >> $GITHUB_ENV
          else
            echo "Image does not exist. Build is needed."
            echo "BUILD_NEEDED=true" >> $GITHUB_ENV
          fi
      - name: Checkout repository
        if: env.BUILD_NEEDED == 'true'
        uses: actions/checkout@v2
        with:
          ref: ${{ env.COMMIT_SHA }}
      - name: Setup Docker Buildx
        if: env.BUILD_NEEDED == 'true'
        uses: docker/setup-buildx-action@v2
      - name: Build Docker image
        if: env.BUILD_NEEDED == 'true'
        run: docker build -t $IMAGE_TAG .
        env:
          IMAGE_TAG: ${{ env.IMAGE_TAG }}
      - name: Push Docker image to Docker Hub
        if: env.BUILD_NEEDED == 'true'
        run: docker push $IMAGE_TAG
        env:
          IMAGE_TAG: ${{ env.IMAGE_TAG }}
      - name: Check if image with tag exists on Docker Hub
        run: |
          if docker manifest inspect "${{ env.IMAGE_TAG }}" > /dev/null 2>&1; then
            echo "Image exists on Docker Hub. Proceed to deployment."
          else
            echo "Image does not exist after built"
            exit 1
          fi
      - name: Set up SSH agent
        uses: webfactory/ssh-agent@v0.5.4
        with:
          ssh-private-key: |
            ${{ secrets.SSH_STAGING_PRIVATE_KEY }}
      - name: Deploy Application
        run: |
          ssh -o StrictHostKeyChecking=no $SSH_USER@$SSH_HOST "WEBSITE_TAG=$IMAGE_TAG docker compose -f website-stack.yaml up -d"
        env:
          IMAGE_TAG: ${{ env.IMAGE_TAG }}
          SSH_HOST: ${{ secrets.SSH_STAGING_HOST }}
          SSH_USER: ${{ secrets.SSH_STAGING_USER }}
